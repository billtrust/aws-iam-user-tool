Here are your AWS master account login credentials.  Do NOT delete this email, you may need to reference information contained here in the future.

Login URL:
{{aws_console_login_url}}

Username:
{{iam_username}}

Temporary Password:
Click the following link to reveal your password.  The link will work only once.
{{encrypted_pw_url}}

You will be prompted to change your password upon login.  Your password must have the following criteria:
Minimum of {{pw_policy.MinimumPasswordLength}} characters
{{#if pw_policy.RequireSymbols}}
Must contain at least 1 special character
{{/if}}
{{#if pw_policy.RequireNumbers}}
Must contain at least one number
{{/if}}
{{#if pw_policy.RequireUppercaseCharacters}}
Must contain at least one upper case character
{{/if}}
{{#if pw_policy.RequireLowercaseCharacters}}
Must contain at least one lower case character
{{/if}}

You will need to setup MFA on your account.  Without doing this you will not have access to do anything in AWS apart from configure MFA.  To setup MFA, click the edit icon next to "Assigned MFA device" on the Security Credentials tab of your IAM user:
https://console.aws.amazon.com/iam/home#/users/{{iam_username}}?section=security_credentials

You will need to download a virtual authenticator such as Authy or Google Authenticator which are available in the iOS App Store or Google Play.  Authy is the recommended choice.

Note: After setting up MFA you may need to log out and log back into the AWS web console in order to change roles.

For more information on how to setup MFA, see:
http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_enable_virtual.html

{{#if roles}}
Your master account user has cross account roles which allow access to our AWS accounts for our other environments.  Once you log into AWS with your master account credentials, you can then assume the roles you were given access to, in order to access the other AWS environments.  Use the below links to access the other AWS environments.

{{#each roles}}
{{env_name}}
Assume Role URL:
{{assume_role_url}}
{{/each}}

To assume these roles with the command line or from code, you will need to setup access keys for your
master account user and configure the AWS CLI for your terminal.

Generate Access Keys

To generate access keys for your AWS master account, first go to the Security Credential tab
of your IAM user:
https://console.aws.amazon.com/iam/home#/users/{{iam_username}}?section=security_credentials

Click "Create Access Key" to generate an access and secret key.

Install the AWS CLI

If you have Python and Pip installed the easiest way will be from a command prompt:

$ pip install awscli --upgrade --user

For other installation options, see:
https://docs.aws.amazon.com/cli/latest/userguide/installing.html

Configuring your AWS Profile

$ aws configure --profile {{iam_username}}

Then follow the prompts to enter the below information.

AWS Access Key ID [None]: (your access key from the earlier step)
AWS Secret Access Key [None]: (your secret key from the earlier step)
Default region name [None]: {{region}}
Default output format [None]: json


Once you have configured your access and secret key for your master account with the AWS CLI,
please do not store these keys anywhere else.  You can always view the values again
by viewing the file ~/.aws/credentials.  Your master account credentials are used only to assume the
cross account roles.  To configure your cross account roles, open ~/.aws/config in
a text editor and add the following section:

{{#each roles}}
[profile {{env_prefix}}]
role_arn = {{role_arn}}
source_profile = {{iam_username}}
output = json
region = {{region}}
{{/each}}

Testing
You can test your credentials by attempting to use the AWS CLI from your terminal.

$ aws sts assume-role \
	--role-arn {{example_role_arn}} \
	--role-session-name testing \
	--profile {{iam_username}}

Successful output of that command will look something like the following, and indicates that you are able to assume the role with your master account user.

{
  "AssumedRoleUser": {
    "AssumedRoleId": "AROASOMETHINGSOMETHING:testing", 
    "Arn": "{{example_role_arn}}"
  },
  "Credentials": {
    "SecretAccessKey": "blahcu43kl34blaHlhfdlsubaljucla", 
    "SessionToken": "biglongstringhere=", 
    "Expiration": "", 
    "AccessKeyId": "ASIASOMETHINGSOMETHING"
  }
}
{{/if}}

Generation of your IAM user and this email were automated, source code located here:
https://github.com/billtrust/aws-iam-user-tool
